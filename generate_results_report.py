import os

from matplotlib.backends.backend_pdf import PdfPages
from PIL import Image

# OneVsOne SVM results as text
onevsone_text = """NSL-KDD Intrusion Detection with SVM Methods\n==================================================\n\n--- OneVsOne SVM Results ---\nAccuracy: 0.7490241305890702\nPrecision: 0.7853497560868729\nRecall: 0.7490241305890702\nF1 Score: 0.7009792849093258\nTraining Time: 165.28 seconds\nConfusion Matrix:\n [[9500   55  150    5    1]\n [1569 5753  138    0    0]\n [ 623  186 1612    0    0]\n [2806    0   64   15    0]\n [  61    0    0    0    6]]\n              precision    recall  f1-score   support\n\n           0       0.65      0.98      0.78      9711\n           1       0.96      0.77      0.86      7460\n           2       0.82      0.67      0.74      2421\n           3       0.75      0.01      0.01      2885\n           4       0.86      0.09      0.16        67\n\n    accuracy                           0.75     22544\n   macro avg       0.81      0.50      0.51     22544\nweighted avg       0.79      0.75      0.70     22544\n"""

# Collect all PNGs in current directory and extracted_figures/
image_files = []
for fname in os.listdir("."):
    if fname.endswith(".png"):
        image_files.append(fname)
if os.path.exists("extracted_figures"):
    for fname in os.listdir("extracted_figures"):
        if fname.endswith(".png"):
            image_files.append(os.path.join("extracted_figures", fname))

# Sort for consistent order (title first, then main charts, then figures)
image_files = sorted(image_files)

# Create PDF
with PdfPages("svm_results_report.pdf") as pdf:
    # Title page
    import matplotlib.pyplot as plt

    plt.figure(figsize=(8.5, 11))
    plt.axis("off")
    plt.text(0.5, 0.7, "SVM Intrusion Detection Results", fontsize=28, ha="center")
    plt.text(
        0.5,
        0.5,
        "Comparison with Literature and Extracted Figures",
        fontsize=18,
        ha="center",
    )
    plt.text(0.5, 0.3, "Generated by AI Assistant", fontsize=14, ha="center")
    pdf.savefig()
    plt.close()

    # OneVsOne SVM results page (as text)
    plt.figure(figsize=(8.5, 11))
    plt.axis("off")
    plt.title("OneVsOne SVM Results", fontsize=16, pad=20)
    plt.text(
        0.01, 0.95, onevsone_text, fontsize=10, va="top", ha="left", family="monospace"
    )
    pdf.savefig()
    plt.close()

    # Add each image as a page
    for img_path in image_files:
        img = Image.open(img_path)
        # Convert to RGB if needed
        if img.mode != "RGB":
            img = img.convert("RGB")
        plt.figure(figsize=(8.5, 11))
        plt.imshow(img)
        plt.axis("off")
        plt.title(os.path.basename(img_path), fontsize=10)
        pdf.savefig()
        plt.close()

print("PDF report generated: svm_results_report.pdf")
